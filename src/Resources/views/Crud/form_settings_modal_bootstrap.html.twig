{% set ajax_options = ajax_options|merge({ 'on_before_send': '/arg/if(processCrudDisplaySettings_'~suffix~'() == false) { arg.stop = true;}' }) %}
{% set reset_ajax_options = ajax_options|merge({ 'on_before_send': 'resetDisplaySettings'~suffix~'();' }) %}
{% set modalId = 'display_settings_' ~suffix %}

{% macro contentDisplaySettings(vars) %}
    {% form_theme vars.form 'bootstrap_3_layout.html.twig' %}

    <div class="modal-header">
        <h4 class="modal-title">{% trans %}Display Settings{% endtrans %}</h4>
    </div>

    {{ form_start_ajax(form, {'ajax_options': ajax_options}) }}
    <div class="modal-body">
        {{ form_row(vars.form.resultsPerPage) }}
        {{ form_row(vars.form.displayedColumns) }}
        <button type="button" class="btn btn-default btn-xs" onclick="selectAllColumnsCrudDisplaySettings_{{ vars.suffix }}(true)">
            {{ 'check_all'|trans }}
        </button>
        <button type="button" class="btn btn-default btn-xs" onclick="selectAllColumnsCrudDisplaySettings_{{ vars.suffix }}(false)">
            {{ 'uncheck_all'|trans }}
        </button>

        {{ form_rest(vars.form) }}
    </div>

    <div class="modal-footer">
        <button class="ec-crud-ajax-click-auto raz-bootstrap btn btn-default btn-sm"{{ ajax_attributes({url: vars.reset_settings_url}|merge(vars.reset_ajax_options)) }}>
            <span class="glyphicon glyphicon-fire"></span> {% trans %}reset_display_settings{% endtrans %}
        </button>
        <button type="submit" class="save-bootstrap btn btn-success btn-sm">
            <span class="glyphicon glyphicon-floppy-disk"></span> {% trans %}Save{% endtrans %}
        </button>
    </div>
    </form>
{% endmacro %}

{% import _self as macro %}

<script type="text/javascript">
    if ($('#{{ modalId }}').length == 0) {
        $('#{{ div_id_list }}').append('{{ overlay_service.declareHtmlModal(modalId, {close_div_class: close_div_class})|raw }}');
    }
    $('#{{ modalId }} .contentWrap').html('{{ macro.contentDisplaySettings(_context)|replace({"\n":' ', "\r":' '})|e('js') }}');
    {{ overlay_service.declareJavascriptModal(modalId, {close_div_class: close_div_class})|raw }}

    function processCrudDisplaySettings_{{ suffix }}()
    {
       if($('#display_settings_{{ suffix }} input:checkbox:checked').length < 1)
       {
            alert('{% trans %}You need to select at least one column to display{% endtrans %}');
            return false;
       }
        {{ overlay_service.closeModal(modalId)|raw }}
    }
    function selectAllColumnsCrudDisplaySettings_{{ suffix }}(checked)
    {
        $('#display_settings_{{ suffix }} input:checkbox').each(function() {
            $(this).prop('checked', checked);
        });
    }
    function changeDisplaySettings{{ suffix }}()
    {
        {{ overlay_service.openModal(modalId)|raw }}
    }
    function resetDisplaySettings{{ suffix }}()
    {
        {{ overlay_service.closeModal(modalId)|raw }}
    }
</script>

{% if display_button %}
<button type="button" class="display_settings-bootstrap btn btn-default btn-sm" onclick="changeDisplaySettings{{ suffix }}(); return false;">
    <span class="glyphicon glyphicon-cog"></span> {% trans %}Display Settings{% endtrans %}
</button>
{% endif %}

<div id="js_holder_for_multi_update_{{ suffix }}" style="display: none;"></div>
